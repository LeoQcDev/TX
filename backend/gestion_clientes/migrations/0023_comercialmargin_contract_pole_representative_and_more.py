# Generated by Django 5.1.1 on 2024-10-27 01:00

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("gestion_clientes", "0022_alter_cliente_entre_calle_alter_cliente_pais"),
    ]

    operations = [
        migrations.CreateModel(
            name="ComercialMargin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "comercial_margin",
                    models.FloatField(
                        db_index=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "comercial_margin_status",
                    models.BooleanField(db_index=True, default=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contract_number",
                    models.CharField(
                        db_index=True,
                        max_length=8,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El número de contrato debe tener el formato TX-ddddd",
                                regex="^TX-\\d{5}",
                            )
                        ],
                    ),
                ),
                ("signature_date", models.DateField(blank=True, null=True)),
                ("contract_status", models.BooleanField(db_index=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Pole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "denomination",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("pole_status", models.BooleanField(db_index=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Representative",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=25)),
                ("last_name", models.CharField(db_index=True, max_length=50)),
                (
                    "representative_email",
                    models.EmailField(max_length=100, unique=True),
                ),
                (
                    "representative_phone",
                    models.CharField(
                        max_length=12,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El teléfono debe tener el formato +53 XXXXXXXX",
                                regex="^\\+53\\s\\d{8}$",
                            )
                        ],
                    ),
                ),
                (
                    "representative_status",
                    models.BooleanField(db_index=True, default=True),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="cliente",
            name="contrato",
        ),
        migrations.RemoveField(
            model_name="cliente",
            name="margen_comercial",
        ),
        migrations.RemoveField(
            model_name="cliente",
            name="polo",
        ),
        migrations.RemoveField(
            model_name="cliente",
            name="representante",
        ),
        migrations.RemoveField(
            model_name="cliente",
            name="ubi",
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        max_length=25,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El código del cliente debe tener 5 dígitos",
                                regex="^\\d{5}",
                            )
                        ],
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100, unique=True)),
                ("is_aei", models.BooleanField(default=False)),
                (
                    "reeup_code",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El código REEUP debe tener 6 dígitos",
                                regex="^\\d{6}",
                            )
                        ],
                    ),
                ),
                (
                    "nip_code",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El código NIP debe tener 9 dígitos",
                                regex="^\\d{9}",
                            )
                        ],
                    ),
                ),
                ("client_status", models.BooleanField(db_index=True, default=True)),
                ("street", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "between_street",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, default="Cuba", max_length=50, null=True
                    ),
                ),
                ("province", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "municipality",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("zip_code", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "client_email",
                    models.EmailField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "comercial_registry",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El código de registro mercantil debe tener 7 dígitos",
                                regex="^\\d{7}",
                            )
                        ],
                    ),
                ),
                (
                    "client_phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El teléfono debe tener el formato +53 XXXXXXXX",
                                regex="^\\+53\\s\\d{8}$",
                            )
                        ],
                    ),
                ),
                (
                    "fax",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="El teléfono debe tener el formato +53 XXXXXXXX",
                                regex="^\\+53\\s\\d{8}$",
                            )
                        ],
                    ),
                ),
                ("web", models.URLField(blank=True, null=True, unique=True)),
                (
                    "ubi",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gestion_clientes.client",
                    ),
                ),
                (
                    "comercial_margin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_clientes.comercialmargin",
                    ),
                ),
                (
                    "contract",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_clientes.contract",
                    ),
                ),
                (
                    "pole",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_clientes.pole",
                    ),
                ),
                (
                    "representative",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_clientes.representative",
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(
            name="Contrato",
        ),
        migrations.DeleteModel(
            name="MargenComercial",
        ),
        migrations.DeleteModel(
            name="Polo",
        ),
        migrations.DeleteModel(
            name="Representante",
        ),
        migrations.DeleteModel(
            name="Cliente",
        ),
    ]
